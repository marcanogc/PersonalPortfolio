Crea un portafolio personal inspirado en https://olaolu.dev/, utilizando las siguientes tecnologías y características:

🧠 Tecnologías a utilizar:
🎨 Frontend
JavaScript

React

CSS3 con metodología BEM

Modo claro y modo oscuro

Colores institucionales de Toti Diversidade

Consumo de API REST para mostrar proyectos

🧰 Backend
Node.js con Express

API REST que obtenga los datos desde una fuente en Notion (o archivo simulado si se prefiere en local)

Estructura simple para manejar solicitudes GET /projects

📐 Estructura esperada (similar a olaolu.dev)
Header

Nombre o logo

Navegación: Sobre mí | Proyectos | Experiencia | Contacto

Botón para cambiar entre modo claro y oscuro

Sección Hero

Nombre

Descripción corta (por ejemplo: “Desenvolvedor e analista de dados em transição”)

Imagen o avatar

Sobre mí

Descripción profesional

Enlace al CV

Proyectos

Cargar desde la API backend

Cada tarjeta de proyecto debe mostrar:

Nombre

Descripción

Tecnologías

Imagen o ícono

Links: GitHub / Demo

Organizar por categorías: BI, Web, Backend, Dados

Experiencia

Breve descripción profesional de tus experiencias anteriores

Enfoque en tecnologías usadas y habilidades transferibles

Contacto

Formulario conectado al backend (puede guardar o simular guardar)

Íconos de redes sociales: LinkedIn, GitHub, Email

🖌️ Diseño:
Estética minimalista y moderna

Tipografía clara, márgenes amplios, íconos visuales

Implementar un sistema de temas (claro/oscuro)

Utilizar los colores principales de Toti Diversidade como base del tema claro: morado vibrante, verde, blanco y negro

Asegurar buena accesibilidad y contraste

🌐 Extras:
Backend con una ruta /projects que devuelva un JSON con proyectos almacenados manualmente o cargados desde una integración con Notion.

El frontend deberá hacer fetch a esta ruta para cargar proyectos dinámicamente.

Separar carpetas de backend y frontend en Replit o tenerlos organizados dentro del mismo repositorio.

🧱 Estructura de carpetas sugerida:
pgsql
Copiar
Editar
/my-portfolio
├── backend/
│   ├── server.js
│   ├── db/
│   │   └── projects.json (o integración con Notion)
│   └── routes/
│       └── projects.js
├── frontend/
│   ├── public/
│   ├── src/
│   │   ├── components/
│   │   ├── pages/
│   │   ├── styles/
│   │   ├── App.js
│   │   └── index.js
├── .env
├── package.json
└── README.md